# turtlesUI: Manages the UI component.
turtlesUI:
  # enabled: Turn UI on or off.
  enabled: false
  # version: UI version to use.
  version: 0.8.2

# Rancher global parameters
global:
  cattle:
    # systemDefaultRegistry is used to specify the registry images are pulled from.
    systemDefaultRegistry: ""

image:
  # repository is the path to the Turtles GitHub repository.
  repository: rancher/turtles
  # tag is the image tag.
  tag: v0.0.0
  # imagePullPolicy specifies image pull policy.
  imagePullPolicy: IfNotPresent

# namespace: Select namespace for Turtles to run.
namespace: rancher-turtles-system
# managerArguments: Extra args for the controller.
managerArguments: []
# imagePullSecrets: Secrets for private registries.
imagePullSecrets: []
# rancherInstalled: True if Rancher already installed is in the cluster, this is the preferred installation way.
rancherInstalled: true
# kubectlImage: Image for kubectl tasks.
kubectlImage: registry.k8s.io/kubernetes/kubectl:v1.31.4
# shellImage: Image for shell tasks.
shellImage: rancher/kuberlr-kubectl:v5.0.0
# airGapped: Whether this is an airGapped installation
# If it is, core CAPI manifest is embedded in the chart and no remote fetch is required.
airGapped: false
# features: Optional and experimental features.
features:
  # agent-tls-mode: Beta feature for agent TLS.
  agent-tls-mode:
    # enabled: Turn on or off.
    enabled: true
  # clusterclass-operations: Alpha feature. Manages cluster class ops. Not ready for testing yet.
  clusterclass-operations:
    # enabled: Turn on or off.
    enabled: false
    # image: Image for cluster class ops.
    image: controller
    # imageVersion: Image tag.
    imageVersion: v0.0.0
    # imagePullPolicy: Pull policy.
    imagePullPolicy: IfNotPresent
# volumes: Volumes for controller pods.
volumes:
  - name: clusterctl-config
    configMap:
      name: clusterctl-config
# volumeMounts: Volume mounts for controller pods.
volumeMounts:
  manager:
    - mountPath: /config
      name: clusterctl-config

# cluster-api-operator: Manages Cluster API components.
cluster-api-operator:
  # cleanup: Enable cleanup tasks.
  cleanup: true
  # cluster-api: Cluster API component settings.
  cluster-api:
    # enabled: Turn on or off.
    enabled: true
    # configSecret: Secret for Cluster API config.
    configSecret:
      # name: Custom secret name (if overriding).
      name: ""
      # defaultName: Default secret name.
      defaultName: capi-env-variables
    # core: Core Cluster API settings.
    core:
      # namespace: Core component namespace.
      namespace: capi-system
      # version: Core ClusterAPI version.
      version: ""
      # enableAutomaticUpdate: Allow the provider to update automatically when a new Turtles version is installed.
      enableAutomaticUpdate: true
      # imageUrl: Custom image URL.
      imageUrl: ""
      # fetchConfig: Config fetching settings.
      fetchConfig:
        # url: Config fetch URL.
        url: ""
        # selector: Config selector.
        selector: ""
    # rke2: RKE2 provider settings.
    rke2:
      # enabled: Turn on or off.
      enabled: true
      # version: RKE2 version.
      version: ""
      # enableAutomaticUpdate: Allow the provider to update automatically when a new Turtles version is installed.
      enableAutomaticUpdate: true
      # bootstrap: RKE2 bootstrap provider.
      bootstrap:
        # namespace: Bootstrap namespace.
        namespace: rke2-bootstrap-system
        # imageUrl: Custom image URL.
        imageUrl: ""
        # fetchConfig: Config fetching settings.
        fetchConfig:
          # url: Config fetch URL.
          url: ""
          # selector: Config selector.
          selector: ""
      # controlPlane: RKE2 control plane provider.
      controlPlane:
        # namespace: Control plane namespace.
        namespace: rke2-control-plane-system
        # imageUrl: Custom image URL.
        imageUrl: ""
        # fetchConfig: Config fetching settings.
        fetchConfig:
          # url: Config fetch URL.
          url: ""
          # selector: Config selector.
          selector: ""
    fleet:
      addon:
        fetchConfig:
          url: ""
          selector: ""
