name: Run nightly e2e tests (using runner)

on:
  workflow_dispatch:
    inputs:
      labels:
        description: the ginkgo labels of tests to include
        required: true
        default: 'short || full'
        type: choice
        options:
        - 'short'
        - 'full'
        - 'dontrun'
        - 'short || full'
        - 'short || full || dontrun'


concurrency: ci_e2e_tests

env:
  NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTHTOKEN }}
  NGROK_API_KEY: ${{ secrets.NGROK_API_KEY }}
  RANCHER_HOSTNAME: ${{ secrets.NGROK_DOMAIN }}
  RANCHER_PASSWORD: ${{ secrets.RANCHER_PASSWORD }}
  CAPA_ENCODED_CREDS: ${{ secrets.CAPA_ENCODED_CREDS }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

jobs:
  e2e_import_gitops:
    name: E2E Tests - Import Gitops
    runs-on: [self-hosted, linux]
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: setupGo
      uses: actions/setup-go@v5.1.0
      with:
        go-version: '=1.22.0'
    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Run e2e tests
      run: GINKGO_TESTS=$(pwd)/test/e2e/suites/import-gitops CACHE_DIR=/tmp/.buildx-cache make test-e2e
      env:
        GINKGO_LABEL_FILTER: ${{ inputs.labels }}
    - name: Collect run artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: artifacts
        path: _artifacts
    - name: Cleanup Azure Resources
      if: always()
      uses: rancher/azure-janitor@v0.1.2
      with:
        resource-groups: highlander-e2e*
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID}}
        client-id: ${{ secrets.AZURE_CLIENT_ID}}
        client-secret: ${{ secrets.AZURE_CLIENT_SECRET}}
        tenant-id: ${{ secrets.AZURE_TENANT_ID}}
        commit: true
  e2e_v2prov:
    name: E2E Tests - v2prov
    runs-on: [self-hosted, linux]
    needs: e2e_import_gitops
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: setupGo
      uses: actions/setup-go@v5.1.0
      with:
        go-version: '=1.22.0'
    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Run e2e tests
      run: GINKGO_TESTS=$(pwd)/test/e2e/suites/v2prov CACHE_DIR=/tmp/.buildx-cache make test-e2e
      env:
        GINKGO_LABEL_FILTER: ${{ inputs.labels }}
    - name: Collect run artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: artifacts
        path: _artifacts
    - name: Cleanup Azure Resources
      if: always()
      uses: rancher/azure-janitor@v0.1.2
      with:
        resource-groups: highlander-e2e*
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID}}
        client-id: ${{ secrets.AZURE_CLIENT_ID}}
        client-secret: ${{ secrets.AZURE_CLIENT_SECRET}}
        tenant-id: ${{ secrets.AZURE_TENANT_ID}}
        commit: true
  e2e_update_labels:
    name: E2E Tests - Update labels
    runs-on: [self-hosted, linux]
    needs: e2e_v2prov
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: setupGo
      uses: actions/setup-go@v5.1.0
      with:
        go-version: '=1.22.0'
    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Run e2e tests
      run: GINKGO_TESTS=$(pwd)/test/e2e/suites/update-labels CACHE_DIR=/tmp/.buildx-cache make test-e2e
      env:
        GINKGO_LABEL_FILTER: ${{ inputs.labels }}
    - name: Collect run artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: artifacts
        path: _artifacts
    - name: Cleanup Azure Resources
      if: always()
      uses: rancher/azure-janitor@v0.1.2
      with:
        resource-groups: highlander-e2e*
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID}}
        client-id: ${{ secrets.AZURE_CLIENT_ID}}
        client-secret: ${{ secrets.AZURE_CLIENT_SECRET}}
        tenant-id: ${{ secrets.AZURE_TENANT_ID}}
        commit: true
  e2e_embedded_capi_disabled:
    name: E2E Tests - Embedded CAPI Disabled
    runs-on: [self-hosted, linux]
    needs: e2e_update_labels
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: setupGo
      uses: actions/setup-go@v5.1.0
      with:
        go-version: '=1.22.0'
    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Run e2e tests
      run: GINKGO_TESTS=$(pwd)/test/e2e/suites/embedded-capi-disabled CACHE_DIR=/tmp/.buildx-cache make test-e2e
      env:
        GINKGO_LABEL_FILTER: ${{ inputs.labels }}
    - name: Collect run artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: artifacts
        path: _artifacts
    - name: Cleanup Azure Resources
      if: always()
      uses: rancher/azure-janitor@v0.1.2
      with:
        resource-groups: highlander-e2e*
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID}}
        client-id: ${{ secrets.AZURE_CLIENT_ID}}
        client-secret: ${{ secrets.AZURE_CLIENT_SECRET}}
        tenant-id: ${{ secrets.AZURE_TENANT_ID}}
        commit: true
